做项目前须知：
bmp文件的基本知识：
lcd：0x00000000
                红 绿 蓝
bmp：0x000000或者0x00000000
           
项目日志：
2023/08/21  
上午：
1.创建makefile文件，便于管理工程。
2.了解lcd的基本使用方式，尝试通过映射打开lcd
映射头文件#include<sys/mman.h>
如果打不开使用perror输出错误信息,引用头文件#include<errno.h>
3.写出对应的解除映射函数关闭lcd函数
4.将要显示的图片放入pic文件夹中
下午：
尝试写了一个画图函数，遇到了很大的问题，进度卡顿。
问题一：
指针的内容和字符串内容不能直接用等号比较，要使用strcmp函数！
问题二：
只刷白屏，不显示图片
尝试一：将fd设为全局变量
晚上：
尝试二：将write改为映射
尝试三：重新了解画图的过程，重新写了一个画图函数。
先读取图片的信息，再通过画点函数进行绘制。可以实现图片的打印但是图片被斜切
2023/8/22
上午：
解决昨天晚上问题的办法：
对bmp的每一个像素点的每一个字节进行位操作读取对应颜色
问题一：读取每一位时存入char变量中，而不能直接存入color里
错误示范：
char bmp_R, bmp_B, bmp_A, bmp_G;
	for (i = bmp_h; i >= 0; i--)
	{
		for (j = 0; j < bmp_w; j++)
		{
			int color = 0;
			if (bmp_colordepth == 32)
			{
				//读完后光标会自动移动到末尾位置
		!!!!!!!!!!错误示范：	bmp_B=read(fd1, &color, 1);
		正确应该这样：	read(fd1, &bmp_B, 1);
				read(fd1, &bmp_G, 1);
				read(fd1, &bmp_R, 1);
				read(fd1, &bmp_A, 1);
				color = bmp_A << 24 | bmp_R << 16 | bmp_G << 8 | bmp_B;
				draw_point(x + j, y + i, color);
			}
问题二：对bmp像素点记录数据顺序不了解，导致刷图颜色不对。
解决办法：多次尝试，发现bmp像素点记录数据为蓝绿红透明度，即BGRA
对于32位的bmp图片，A就为他本身的A，如果是24位的bmp图片，要将A置0。

思考存放多张图片的办法：10：00.am
初步思路：用目录打开文件，给多张图片依次命名1.bmp；2.bmp...；
对图片进行循环遍历，使用延时进行刷图显示。
	while (dirp = readdir(dir))
	{

		if (strcmp(dirp->d_name, "1.bmp") == 0)
		{
			draw_pic(200, 40, dirp->d_name);
		}
		usleep(50);
		init_lcd();
		if (strcmp(dirp->d_name, "2.bmp") == 0)
		{
			draw_pic(200, 40, dirp->d_name);
		}
		usleep(50);
		init_lcd();
		if (strcmp(dirp->d_name, "3.bmp") == 0)
		{
			draw_pic(200, 40, dirp->d_name);
			break;
		}
	}
问题：延时不能太大，否则刷不出图片，故使用50微秒

尝试使用触摸屏事件，实现点击一下屏幕切换一张图片。
思路：10：33.am
首先实现触摸屏事件：设备名为：/dev/input/event0，头文件为：linux/input.h
问题：容易出现使用野指针的情况
解决方法，每使用一个指针必须对其进行初始化
通过使用sprintf函数和%d，实现点击一下屏幕切一张图片
int i,x,y;
init_lcd();
char* name = (char*)malloc(sizeof(name));
//ShowBmp();
for (i = 1; i <= 3; i++)
{
	sprintf(name, "%d.bmp", i);
	get_coordinate(&x,&y);
	draw_pic(200, 40, name);
	get_coordinate(&x, &y);
	init_lcd();
	printf("x=%d y=%d", x, y);
}
添加功能：
思路一：
实现图片来回切换，点左半边实现回退，右半边实现下一张。
思路：可以通过触摸屏函数返回的坐标判断在左半边还是右半边，然后通过控制%d的值来实现切换。
出现一点点问题：可以来回切换，但是当图片为最后一张时，程序结束了。
解决思路：当图片为最后一张时将i置一
新思路：给一个死循环来回切换，设置一个小小的xy坐标范围，当触摸到那个范围时，退出程序。

下午：
思路二：使用双向循环链表实现功能
问题：sprintf函数的用法有误
存字符串的指针必须有一块空间，不能是空地址！！！！

优化电子相册：
传入一份ppt。
2023/08/23
尝试使用滑动屏幕
下午，设置一个按钮，点击按钮切换到下一个界面

